name: nfs-provisioner
title: Ganesha NFS provisioner
type: storage
icon: ganesha
hostname: nfs
scalable: false
options:
- version: '4'
  tag: v4.0.8
  default: true

containers:
- name: nfs
  image: registry.k8s.io/sig-storage/nfs-provisioner

endpoints:
- name: nfs
  ports:
  - name: nfs
    number: 2049
    type: tcp
    main: true
  - name: nfs-udp
    number: 2049
    type: udp
  - name: nlockmgr
    number: 32803
    type: tcp
  - name: nlockmgr-udp
    number: 32803
    type: udp
  - name: mountd
    number: 20048
    type: tcp
  - name: mountd-udp
    number: 20048
    type: udp
  - name: rquotad
    number: 875
    type: tcp
  - name: rquotad-udp
    number: 875
    type: udp
  - name: rpcbind
    number: 111
    type: tcp
  - name: rpcbind-udp
    number: 111
    type: udp
  - name: statd
    number: 662
    type: tcp
  - name: statd-udp
    number: 662
    type: udp

imports:
- name: files
  volume: data
  title: Files import
  destination: '/export/pvc-{{import_pvc_uid}}'
  extensions:
  - tar
  - tar.gz
  - tgz
  - zip

volumes:
- name: data
  title: Data
  helm:
    values:
    - name: persistence.enabled
      value: true
    - name: persistence.size
      value: '{{volumes.data.size}}Gi'
    # mandatory to use existing claim since this volume has import function
    # we will mount different claim after import and doing it through sts's volumeclaimtemplates is not supported
    - name: persistence.existingClaim
      value: '{{volumes.data.claim}}'

helm:
  name: wodby
  source: oci://registry-1.docker.io/wodby/nfs-provisioner
  chart: oci://registry-1.docker.io/wodby/nfs-provisioner
  version: 0.1.2
  configurations:
  - name: nfs
    annotations: podAnnotations
    labels: podLabels
    env: envVars
    resources: resources

backups:
- name: files
  title: Files backup
  upload:
    dir: /export
    gzip: false
